{"version":3,"sources":["utils/API.js","components/Table.js","components/SearchForm.js","components/Page.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Table","props","className","results","map","result","name","first","last","src","picture","thumbnail","alt","email","location","timezone","offset","gender","login","uuid","SearchForm","search","handleFilter","htmlFor","value","onChange","e","target","list","type","placeholder","id","Page","state","error","originalList","sortedAsc","handleInputChange","event","setState","newArr","filter","person","toLowerCase","includes","handleNameSort","asc","desc","sort","a","b","API","then","res","data","catch","err","console","log","height","width","onClick","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAMe,EACL,WACN,OAAOA,IAAMC,IALD,iD,OC+BDC,MAhCf,SAAeC,GACb,OACE,wBAAOC,UAAU,QAAjB,UACE,gCACE,+BACE,uCACA,0CACA,wCACA,8CACA,8CAGJ,gCAGGD,EAAME,QAAQC,KAAI,SAACC,GAAD,OACjB,+BACE,6BAAKA,EAAOC,KAAKC,MAAQ,IAAMF,EAAOC,KAAKE,OAC3C,+BACG,IACD,qBAAKC,IAAKJ,EAAOK,QAAQC,UAAWC,IAAI,gBAE1C,6BAAKP,EAAOQ,QACZ,6BAAKR,EAAOS,SAASC,SAASC,SAC9B,6BAAKX,EAAOY,WARLZ,EAAOa,MAAMC,eCKjBC,MApBf,YAA4C,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,aACzB,OACJ,sBAAKpB,UAAU,aAAf,UACE,uBAAOqB,QAAQ,SAAf,qBACA,uBACEC,MAAOH,EACPI,SAAU,SAAAC,GAAC,OAAEJ,EAAaI,EAAEC,OAAOH,QACnClB,KAAK,SACLsB,KAAK,SACLC,KAAK,OACL3B,UAAU,eACV4B,YAAY,eACZC,GAAG,eCsEQC,E,4MA/EbC,MAAQ,CACNZ,OAAQ,GACRlB,QAAS,GACT+B,MAAO,GACPC,aAAc,GACdC,WAAU,G,EAeZC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAElB,OAAQiB,EAAMX,OAAOH,S,EAGvCF,aAAe,SAAChB,GACd,EAAKiC,SAAS,CAAElB,OAAQf,IACxB,IAAMkC,EAAS,EAAKP,MAAME,aAAaM,QACrC,SAACC,GAAD,OACEA,EAAOpC,KAAKC,MAAMoC,cAAcC,SAAStC,EAAKqC,gBAC9CD,EAAOpC,KAAKE,KAAKmC,cAAcC,SAAStC,EAAKqC,kBAEjD,EAAKJ,SAAS,CAAEpC,QAASqC,K,EAG3BK,eAAiB,WAEf,IAAIC,EAAM,EACNC,GAAQ,EAGR,EAAKd,MAAMG,YACbU,GAAO,EACPC,EAAO,GAGT,IAAMP,EAAS,EAAKP,MAAME,aAAaa,MAAK,SAACC,EAAGC,GAC9C,OAAID,EAAE3C,KAAKC,MAAMoC,cAAgBO,EAAE5C,KAAKC,MAAMoC,cACrCG,EAELG,EAAE3C,KAAKC,MAAMoC,cAAgBO,EAAE5C,KAAKC,MAAMoC,cACrCI,EAEF,KAET,EAAKR,SAAS,CACZJ,aAAcK,EACdJ,WAAY,EAAKH,MAAMG,a,uDA/C3B,WAAqB,IAAD,OAClBe,IACGC,MAAK,SAACC,GAAD,OACJ,EAAKd,SAAS,CACZpC,QAASkD,EAAIC,KAAKnD,QAClBgC,aAAckB,EAAIC,KAAKnD,aAG1BoD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,oBA2ChC,WACE,OACE,gCACE,oDACA,uBACA,wBAAQG,OAAO,QAAQC,MAAM,QAAQC,QAASC,KAAKjB,eAAnD,0BAGA,uBACA,cAAC,EAAD,CACExB,OAAQyC,KAAK7B,MAAMZ,OACnBC,aAAcwC,KAAKxC,eAErB,cAAC,EAAD,eAAWwC,KAAK7B,e,GA1EL8B,aCOJC,MANf,WACE,OACC,cAAC,EAAD,KCIYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a3d8b63c.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\n\nimport axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=20&nat=us\";\n\n// Export an object with a \"search\" method that searches the specified API for the passed query\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};\n","import React from \"react\";\n\nfunction Table(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <td> Name</td>\n          <td> Picture</td>\n          <td> Email</td>\n          <td> Time Offset</td>\n          <td> Gender</td>\n        </tr>\n      </thead>\n      <tbody>\n        {/* {props.results.map(result => result.gender.includes(props.state.filterStr))\n         {props.results.gender.filter(result => result.gender.includes(props.state.filterStr)) */}\n        {props.results.map((result) => (\n          <tr key={result.login.uuid}>\n            <td>{result.name.first + \" \" + result.name.last}</td>\n            <td>\n              {\" \"}\n              <img src={result.picture.thumbnail} alt=\"Employee\" />\n            </td>\n            <td>{result.email}</td>\n            <td>{result.location.timezone.offset}</td>\n            <td>{result.gender}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n\n//below works on making table sortable\n\n// import './styles.css';\n\n// const useSortableData = (items, config = null) => {\n//   const [sortConfig, setSortConfig] = React.useState(config);\n\n//   const sortedItems = React.useMemo(() => {\n//     let sortableItems = [...items];\n//     if (sortConfig !== null) {\n//       sortableItems.sort((a, b) => {\n//         if (a[sortConfig.key] < b[sortConfig.key]) {\n//           return sortConfig.direction === 'ascending' ? -1 : 1;\n//         }\n//         if (a[sortConfig.key] > b[sortConfig.key]) {\n//           return sortConfig.direction === 'ascending' ? 1 : -1;\n//         }\n//         return 0;\n//       });\n//     }\n//     return sortableItems;\n//   }, [items, sortConfig]);\n\n//   const requestSort = (key) => {\n//     let direction = 'ascending';\n//     if (\n//       sortConfig &&\n//       sortConfig.key === key &&\n//       sortConfig.direction === 'ascending'\n//     ) {\n//       direction = 'descending';\n//     }\n//     setSortConfig({ key, direction });\n//   };\n\n//   return { items: sortedItems, requestSort, sortConfig };\n// };\n\n// const ProductTable = (props) => {\n//   const { items, requestSort, sortConfig } = useSortableData(props.products);\n//   const getClassNamesFor = (name) => {\n//     if (!sortConfig) {\n//       return;\n//     }\n//     return sortConfig.key === name ? sortConfig.direction : undefined;\n//   };\n//   return (\n//     <table>\n//       <caption>Products</caption>\n//       <thead>\n//         <tr>\n//           <th>\n//             <button\n//               type=\"button\"\n//               onClick={() => requestSort('name')}\n//               className={getClassNamesFor('name')}\n//             >\n//               Name\n//             </button>\n//           </th>\n//           <th>\n//             <button\n//               type=\"button\"\n//               onClick={() => requestSort('price')}\n//               className={getClassNamesFor('price')}\n//             >\n//               Price\n//             </button>\n//           </th>\n//           <th>\n//             <button\n//               type=\"button\"\n//               onClick={() => requestSort('stock')}\n//               className={getClassNamesFor('stock')}\n//             >\n//               In Stock\n//             </button>\n//           </th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {items.map((item) => (\n//           <tr key={item.id}>\n//             <td>{item.name}</td>\n//             <td>${item.price}</td>\n//             <td>{item.stock}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default function App() {\n//   return (\n//     <div className=\"App\">\n//       <ProductTable\n//         products={[\n//           { id: 1, name: 'Cheese', price: 4.9, stock: 20 },\n//           { id: 2, name: 'Milk', price: 1.9, stock: 32 },\n//           { id: 3, name: 'Yoghurt', price: 2.4, stock: 12 },\n//           { id: 4, name: 'Heavy Cream', price: 3.9, stock: 9 },\n//           { id: 5, name: 'Butter', price: 0.9, stock: 99 },\n//           { id: 6, name: 'Sour Cream ', price: 2.9, stock: 86 },\n//           { id: 7, name: 'Fancy French Cheese ðŸ‡«ðŸ‡·', price: 99, stock: 12 },\n//         ]}\n//       />\n//     </div>\n//   );\n// }\n","import React from 'react';\n\n\nfunction SearchForm({search, handleFilter}){\n    return (\n<div className=\"form-group\">\n  <label htmlFor=\"gender\">Filter:</label>\n  <input\n    value={search}\n    onChange={e=>handleFilter(e.target.value)}\n    name=\"gender\"\n    list=\"gender\"\n    type=\"text\"\n    className=\"form-control\"\n    placeholder=\"Type In Name\"\n    id=\"gender\"\n  />\n</div>\n\n\n);\n};\n\nexport default SearchForm;\n\n\n\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Table from \"./Table\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass Page extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    error: \"\",\n    originalList: [],\n    sortedAsc:false,\n  };\n\n  // When the component mounts, get the employee data and update this.state.results\n  componentDidMount() {\n    API.search()\n      .then((res) =>\n        this.setState({\n          results: res.data.results,\n          originalList: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFilter = (name) => {\n    this.setState({ search: name });\n    const newArr = this.state.originalList.filter(\n      (person) =>\n        person.name.first.toLowerCase().includes(name.toLowerCase()) ||\n        person.name.last.toLowerCase().includes(name.toLowerCase())\n    );\n    this.setState({ results: newArr });\n  };\n\n  handleNameSort = () => {\n    //set for false condition on page load\n    let asc = 1;\n    let desc = -1;\n\n    //set for false condition on page load\n    if (this.state.sortedAsc){\n      asc = -1;\n      desc = 1;\n    }\n\n    const newArr = this.state.originalList.sort((a, b) => {\n      if (a.name.first.toLowerCase() > b.name.first.toLowerCase()) {\n        return asc;\n      }\n      if (a.name.first.toLowerCase() < b.name.first.toLowerCase()) {\n        return desc;\n      }\n      return 0;\n    });\n    this.setState({\n      originalList: newArr,\n      sortedAsc: !this.state.sortedAsc,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>My Employee Search</h1>\n        <br />\n        <button height=\"400px\" width=\"500px\" onClick={this.handleNameSort}>\n          sort by name\n        </button>\n        <br />\n        <SearchForm\n          search={this.state.search}\n          handleFilter={this.handleFilter}\n        />\n        <Table {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Table from './components/Table';\nimport Page from './components/Page'\n\n\nfunction App() {\n  return (\n   <Page/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}